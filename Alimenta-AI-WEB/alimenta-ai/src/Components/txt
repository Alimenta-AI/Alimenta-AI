CREATE TABLE cliente (
  clienteId CHAR(20) PRIMARY KEY,
  nome VARCHAR2(50) NOT NULL,
  email VARCHAR2(150) UNIQUE NOT NULL,
  senha VARCHAR2(20) NOT NULL,
  celular CHAR(11) UNIQUE NOT NULL,
  endereco VARCHAR2(200) NOT NULL,
  tipoCliente NUMBER(1) NOT NULL
);

CREATE TABLE usuario (
  cpf CHAR(11) UNIQUE NOT NULL,
  nascimento CHAR(8) NOT NULL,
  doador CHAR(3) NOT NULL,
  clienteId CHAR(20),
  FOREIGN KEY (clienteId) REFERENCES cliente(clienteId)
);

CREATE TABLE instituicao (
  website VARCHAR2(150),
  tipo VARCHAR2(15),
  cnpj CHAR(14) UNIQUE NOT NULL,
  clienteId CHAR(20),
  FOREIGN KEY (clienteId) REFERENCES cliente(clienteId)
);

CREATE TABLE estoque (
  estoqueId CHAR(20) PRIMARY KEY,
  tamanho NUMBER(4) NOT NULL, 
  clienteId CHAR(20) NOT NULL,
  FOREIGN KEY (clienteId) REFERENCES cliente(clienteId)
);

CREATE TABLE alimento (
  alimentoId CHAR(20) PRIMARY KEY,
  nome VARCHAR2(50) NOT NULL,
  validade CHAR(6), -- mmyyyy 
  quantidade NUMBER(10) NOT NULL,
  estoqueId CHAR(20) NOT NULL,  
  FOREIGN KEY (estoqueId) REFERENCES estoque(estoqueId)
);

CREATE TABLE movimentacao (
  clienteIdUsuario CHAR(20),
  clienteIdInstituicao CHAR(20),
  num_solicitacao VARCHAR2(10) PRIMARY KEY,
  data_movimentacao CHAR(12) NOT NULL,
  descricao VARCHAR2(150) NOT NULL,
  categoria VARCHAR2(20) NOT NULL,
  FOREIGN KEY (clienteIdUsuario) REFERENCES cliente(clienteId),
  FOREIGN KEY (clienteIdInstituicao) REFERENCES cliente(clienteId)
);

CREATE TABLE avaliacao (
  nota NUMBER(2) NOT NULL,
  dataAvaliacao CHAR(12),
  avaliacaoId CHAR(20) PRIMARY KEY,
  clienteId CHAR(20),
  FOREIGN KEY (clienteId) REFERENCES cliente(clienteId)
);

CREATE TABLE comentario(
  comentarioId CHAR(20) PRIMARY KEY,
  texto VARCHAR2(250) NOT NULL,
  dataComentario CHAR(12) NOT NULL,
  avaliacaoId CHAR(20),
  FOREIGN KEY (avaliacaoId) REFERENCES avaliacao(avaliacaoId)
);

CREATE TABLE reservaCliente (
  reservaId CHAR(20) PRIMARY KEY,
  checkIn CHAR(12) NOT NULL,
  dataReserva CHAR(12) NOT NULL,
  checkOut CHAR(12) NOT NULL,
  clienteId CHAR(20),
  FOREIGN KEY (clienteId) REFERENCES cliente(clienteId)
);